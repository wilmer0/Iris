<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xXj27P/BZ8LZnRPHzwAAAABJRU5ErkJggg==
</value>
  </data>
</root>